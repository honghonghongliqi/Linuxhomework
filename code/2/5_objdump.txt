
Learn Git and GitHub without any code!

Using the Hello World guide, youâ€™ll start a branch, write comments, and open a pull request.

1
0

    0

StarForAll/myRepository
Code
Issues 0
Pull requests 0
Actions
Projects 0
Wiki
Security
Insights
myRepository/week14/code/classPractice/2/5_objdump.txt
@StarForAll StarForAll add linux_learn_2 c899ad9 5 days ago
319 lines (287 sloc) 15.6 KB

5:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 42 2f 00 00    	pushq  0x2f42(%rip)        # 3f68 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 44 2f 00 00    	jmpq   *0x2f44(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <pthread_create@plt>:
    1030:	ff 25 42 2f 00 00    	jmpq   *0x2f42(%rip)        # 3f78 <pthread_create@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <__xpg_strerror_r@plt>:
    1040:	ff 25 3a 2f 00 00    	jmpq   *0x2f3a(%rip)        # 3f80 <__xpg_strerror_r@GLIBC_2.3.4>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <pthread_rwlock_init@plt>:
    1050:	ff 25 32 2f 00 00    	jmpq   *0x2f32(%rip)        # 3f88 <pthread_rwlock_init@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <__stack_chk_fail@plt>:
    1060:	ff 25 2a 2f 00 00    	jmpq   *0x2f2a(%rip)        # 3f90 <__stack_chk_fail@GLIBC_2.4>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <printf@plt>:
    1070:	ff 25 22 2f 00 00    	jmpq   *0x2f22(%rip)        # 3f98 <printf@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <pthread_rwlock_wrlock@plt>:
    1080:	ff 25 1a 2f 00 00    	jmpq   *0x2f1a(%rip)        # 3fa0 <pthread_rwlock_wrlock@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <pthread_rwlock_rdlock@plt>:
    1090:	ff 25 12 2f 00 00    	jmpq   *0x2f12(%rip)        # 3fa8 <pthread_rwlock_rdlock@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <fprintf@plt>:
    10a0:	ff 25 0a 2f 00 00    	jmpq   *0x2f0a(%rip)        # 3fb0 <fprintf@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <pthread_rwlock_unlock@plt>:
    10b0:	ff 25 02 2f 00 00    	jmpq   *0x2f02(%rip)        # 3fb8 <pthread_rwlock_unlock@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <perror@plt>:
    10c0:	ff 25 fa 2e 00 00    	jmpq   *0x2efa(%rip)        # 3fc0 <perror@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <pthread_join@plt>:
    10d0:	ff 25 f2 2e 00 00    	jmpq   *0x2ef2(%rip)        # 3fc8 <pthread_join@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <pthread_rwlock_destroy@plt>:
    10e0:	ff 25 ea 2e 00 00    	jmpq   *0x2eea(%rip)        # 3fd0 <pthread_rwlock_destroy@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

00000000000010f0 <__cxa_finalize@plt>:
    10f0:	ff 25 02 2f 00 00    	jmpq   *0x2f02(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10f6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001100 <_start>:
    1100:	31 ed                	xor    %ebp,%ebp
    1102:	49 89 d1             	mov    %rdx,%r9
    1105:	5e                   	pop    %rsi
    1106:	48 89 e2             	mov    %rsp,%rdx
    1109:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    110d:	50                   	push   %rax
    110e:	54                   	push   %rsp
    110f:	4c 8d 05 3a 03 00 00 	lea    0x33a(%rip),%r8        # 1450 <__libc_csu_fini>
    1116:	48 8d 0d d3 02 00 00 	lea    0x2d3(%rip),%rcx        # 13f0 <__libc_csu_init>
    111d:	48 8d 3d 11 01 00 00 	lea    0x111(%rip),%rdi        # 1235 <main>
    1124:	ff 15 b6 2e 00 00    	callq  *0x2eb6(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    112a:	f4                   	hlt    
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <deregister_tm_clones>:
    1130:	48 8d 3d d9 2e 00 00 	lea    0x2ed9(%rip),%rdi        # 4010 <__TMC_END__>
    1137:	48 8d 05 d2 2e 00 00 	lea    0x2ed2(%rip),%rax        # 4010 <__TMC_END__>
    113e:	48 39 f8             	cmp    %rdi,%rax
    1141:	74 15                	je     1158 <deregister_tm_clones+0x28>
    1143:	48 8b 05 8e 2e 00 00 	mov    0x2e8e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    114a:	48 85 c0             	test   %rax,%rax
    114d:	74 09                	je     1158 <deregister_tm_clones+0x28>
    114f:	ff e0                	jmpq   *%rax
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <register_tm_clones>:
    1160:	48 8d 3d a9 2e 00 00 	lea    0x2ea9(%rip),%rdi        # 4010 <__TMC_END__>
    1167:	48 8d 35 a2 2e 00 00 	lea    0x2ea2(%rip),%rsi        # 4010 <__TMC_END__>
    116e:	48 29 fe             	sub    %rdi,%rsi
    1171:	48 c1 fe 03          	sar    $0x3,%rsi
    1175:	48 89 f0             	mov    %rsi,%rax
    1178:	48 c1 e8 3f          	shr    $0x3f,%rax
    117c:	48 01 c6             	add    %rax,%rsi
    117f:	48 d1 fe             	sar    %rsi
    1182:	74 14                	je     1198 <register_tm_clones+0x38>
    1184:	48 8b 05 65 2e 00 00 	mov    0x2e65(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    118b:	48 85 c0             	test   %rax,%rax
    118e:	74 08                	je     1198 <register_tm_clones+0x38>
    1190:	ff e0                	jmpq   *%rax
    1192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <__do_global_dtors_aux>:
    11a0:	80 3d 81 2e 00 00 00 	cmpb   $0x0,0x2e81(%rip)        # 4028 <completed.7963>
    11a7:	75 2f                	jne    11d8 <__do_global_dtors_aux+0x38>
    11a9:	55                   	push   %rbp
    11aa:	48 83 3d 46 2e 00 00 	cmpq   $0x0,0x2e46(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11b1:	00 
    11b2:	48 89 e5             	mov    %rsp,%rbp
    11b5:	74 0c                	je     11c3 <__do_global_dtors_aux+0x23>
    11b7:	48 8b 3d 4a 2e 00 00 	mov    0x2e4a(%rip),%rdi        # 4008 <__dso_handle>
    11be:	e8 2d ff ff ff       	callq  10f0 <__cxa_finalize@plt>
    11c3:	e8 68 ff ff ff       	callq  1130 <deregister_tm_clones>
    11c8:	c6 05 59 2e 00 00 01 	movb   $0x1,0x2e59(%rip)        # 4028 <completed.7963>
    11cf:	5d                   	pop    %rbp
    11d0:	c3                   	retq   
    11d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <frame_dummy>:
    11e0:	e9 7b ff ff ff       	jmpq   1160 <register_tm_clones>

00000000000011e5 <function>:
    11e5:	55                   	push   %rbp
    11e6:	48 89 e5             	mov    %rsp,%rbp
    11e9:	48 83 ec 20          	sub    $0x20,%rsp
    11ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    11f1:	48 8d 3d 48 2e 00 00 	lea    0x2e48(%rip),%rdi        # 4040 <rwlock>
    11f8:	e8 93 fe ff ff       	callq  1090 <pthread_rwlock_rdlock@plt>
    11fd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1204:	eb 13                	jmp    1219 <function+0x34>
    1206:	8b 05 20 2e 00 00    	mov    0x2e20(%rip),%eax        # 402c <global>
    120c:	83 c0 01             	add    $0x1,%eax
    120f:	89 05 17 2e 00 00    	mov    %eax,0x2e17(%rip)        # 402c <global>
    1215:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1219:	81 7d fc 3f 42 0f 00 	cmpl   $0xf423f,-0x4(%rbp)
    1220:	7e e4                	jle    1206 <function+0x21>
    1222:	48 8d 3d 17 2e 00 00 	lea    0x2e17(%rip),%rdi        # 4040 <rwlock>
    1229:	e8 82 fe ff ff       	callq  10b0 <pthread_rwlock_unlock@plt>
    122e:	b8 00 00 00 00       	mov    $0x0,%eax
    1233:	c9                   	leaveq 
    1234:	c3                   	retq   

0000000000001235 <main>:
    1235:	55                   	push   %rbp
    1236:	48 89 e5             	mov    %rsp,%rbp
    1239:	48 81 ec 40 04 00 00 	sub    $0x440,%rsp
    1240:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1247:	00 00 
    1249:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    124d:	31 c0                	xor    %eax,%eax
    124f:	be 00 00 00 00       	mov    $0x0,%esi
    1254:	48 8d 3d e5 2d 00 00 	lea    0x2de5(%rip),%rdi        # 4040 <rwlock>
    125b:	e8 f0 fd ff ff       	callq  1050 <pthread_rwlock_init@plt>
    1260:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
    1266:	83 bd cc fb ff ff 00 	cmpl   $0x0,-0x434(%rbp)
    126d:	74 43                	je     12b2 <main+0x7d>
    126f:	48 8d 8d f0 fb ff ff 	lea    -0x410(%rbp),%rcx
    1276:	8b 85 cc fb ff ff    	mov    -0x434(%rbp),%eax
    127c:	ba 00 04 00 00       	mov    $0x400,%edx
    1281:	48 89 ce             	mov    %rcx,%rsi
    1284:	89 c7                	mov    %eax,%edi
    1286:	e8 b5 fd ff ff       	callq  1040 <__xpg_strerror_r@plt>
    128b:	89 c2                	mov    %eax,%edx
    128d:	48 8b 05 8c 2d 00 00 	mov    0x2d8c(%rip),%rax        # 4020 <stderr@@GLIBC_2.2.5>
    1294:	48 8d 35 6d 0d 00 00 	lea    0xd6d(%rip),%rsi        # 2008 <_IO_stdin_used+0x8>
    129b:	48 89 c7             	mov    %rax,%rdi
    129e:	b8 00 00 00 00       	mov    $0x0,%eax
    12a3:	e8 f8 fd ff ff       	callq  10a0 <fprintf@plt>
    12a8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    12ad:	e9 1d 01 00 00       	jmpq   13cf <main+0x19a>
    12b2:	48 8d 3d 87 2d 00 00 	lea    0x2d87(%rip),%rdi        # 4040 <rwlock>
    12b9:	e8 c2 fd ff ff       	callq  1080 <pthread_rwlock_wrlock@plt>
    12be:	c7 85 c4 fb ff ff 00 	movl   $0x0,-0x43c(%rbp)
    12c5:	00 00 00 
    12c8:	eb 5c                	jmp    1326 <main+0xf1>
    12ca:	48 8d 85 d0 fb ff ff 	lea    -0x430(%rbp),%rax
    12d1:	8b 95 c4 fb ff ff    	mov    -0x43c(%rbp),%edx
    12d7:	48 63 d2             	movslq %edx,%rdx
    12da:	48 c1 e2 03          	shl    $0x3,%rdx
    12de:	48 01 d0             	add    %rdx,%rax
    12e1:	b9 00 00 00 00       	mov    $0x0,%ecx
    12e6:	48 8d 15 f8 fe ff ff 	lea    -0x108(%rip),%rdx        # 11e5 <function>
    12ed:	be 00 00 00 00       	mov    $0x0,%esi
    12f2:	48 89 c7             	mov    %rax,%rdi
    12f5:	e8 36 fd ff ff       	callq  1030 <pthread_create@plt>
    12fa:	89 85 cc fb ff ff    	mov    %eax,-0x434(%rbp)
    1300:	83 bd cc fb ff ff 00 	cmpl   $0x0,-0x434(%rbp)
    1307:	74 16                	je     131f <main+0xea>
    1309:	48 8d 3d 10 0d 00 00 	lea    0xd10(%rip),%rdi        # 2020 <_IO_stdin_used+0x20>
    1310:	e8 ab fd ff ff       	callq  10c0 <perror@plt>
    1315:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    131a:	e9 b0 00 00 00       	jmpq   13cf <main+0x19a>
    131f:	83 85 c4 fb ff ff 01 	addl   $0x1,-0x43c(%rbp)
    1326:	83 bd c4 fb ff ff 03 	cmpl   $0x3,-0x43c(%rbp)
    132d:	7e 9b                	jle    12ca <main+0x95>
    132f:	48 8d 3d 0a 2d 00 00 	lea    0x2d0a(%rip),%rdi        # 4040 <rwlock>
    1336:	e8 75 fd ff ff       	callq  10b0 <pthread_rwlock_unlock@plt>
    133b:	c7 85 c8 fb ff ff 00 	movl   $0x0,-0x438(%rbp)
    1342:	00 00 00 
    1345:	eb 24                	jmp    136b <main+0x136>
    1347:	8b 85 c8 fb ff ff    	mov    -0x438(%rbp),%eax
    134d:	48 98                	cltq   
    134f:	48 8b 84 c5 d0 fb ff 	mov    -0x430(%rbp,%rax,8),%rax
    1356:	ff 
    1357:	be 00 00 00 00       	mov    $0x0,%esi
    135c:	48 89 c7             	mov    %rax,%rdi
    135f:	e8 6c fd ff ff       	callq  10d0 <pthread_join@plt>
    1364:	83 85 c8 fb ff ff 01 	addl   $0x1,-0x438(%rbp)
    136b:	83 bd c8 fb ff ff 03 	cmpl   $0x3,-0x438(%rbp)
    1372:	7e d3                	jle    1347 <main+0x112>
    1374:	48 8d 3d c5 2c 00 00 	lea    0x2cc5(%rip),%rdi        # 4040 <rwlock>
    137b:	e8 60 fd ff ff       	callq  10e0 <pthread_rwlock_destroy@plt>
    1380:	ba 40 42 0f 00       	mov    $0xf4240,%edx
    1385:	be 04 00 00 00       	mov    $0x4,%esi
    138a:	48 8d 3d a7 0c 00 00 	lea    0xca7(%rip),%rdi        # 2038 <_IO_stdin_used+0x38>
    1391:	b8 00 00 00 00       	mov    $0x0,%eax
    1396:	e8 d5 fc ff ff       	callq  1070 <printf@plt>
    139b:	be 00 09 3d 00       	mov    $0x3d0900,%esi
    13a0:	48 8d 3d c2 0c 00 00 	lea    0xcc2(%rip),%rdi        # 2069 <_IO_stdin_used+0x69>
    13a7:	b8 00 00 00 00       	mov    $0x0,%eax
    13ac:	e8 bf fc ff ff       	callq  1070 <printf@plt>
    13b1:	8b 05 75 2c 00 00    	mov    0x2c75(%rip),%eax        # 402c <global>
    13b7:	89 c6                	mov    %eax,%esi
    13b9:	48 8d 3d bc 0c 00 00 	lea    0xcbc(%rip),%rdi        # 207c <_IO_stdin_used+0x7c>
    13c0:	b8 00 00 00 00       	mov    $0x0,%eax
    13c5:	e8 a6 fc ff ff       	callq  1070 <printf@plt>
    13ca:	b8 00 00 00 00       	mov    $0x0,%eax
    13cf:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    13d3:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    13da:	00 00 
    13dc:	74 05                	je     13e3 <main+0x1ae>
    13de:	e8 7d fc ff ff       	callq  1060 <__stack_chk_fail@plt>
    13e3:	c9                   	leaveq 
    13e4:	c3                   	retq   
    13e5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    13ec:	00 00 00 
    13ef:	90                   	nop

00000000000013f0 <__libc_csu_init>:
    13f0:	41 57                	push   %r15
    13f2:	49 89 d7             	mov    %rdx,%r15
    13f5:	41 56                	push   %r14
    13f7:	49 89 f6             	mov    %rsi,%r14
    13fa:	41 55                	push   %r13
    13fc:	41 89 fd             	mov    %edi,%r13d
    13ff:	41 54                	push   %r12
    1401:	4c 8d 25 48 29 00 00 	lea    0x2948(%rip),%r12        # 3d50 <__frame_dummy_init_array_entry>
    1408:	55                   	push   %rbp
    1409:	48 8d 2d 48 29 00 00 	lea    0x2948(%rip),%rbp        # 3d58 <__init_array_end>
    1410:	53                   	push   %rbx
    1411:	4c 29 e5             	sub    %r12,%rbp
    1414:	48 83 ec 08          	sub    $0x8,%rsp
    1418:	e8 e3 fb ff ff       	callq  1000 <_init>
    141d:	48 c1 fd 03          	sar    $0x3,%rbp
    1421:	74 1b                	je     143e <__libc_csu_init+0x4e>
    1423:	31 db                	xor    %ebx,%ebx
    1425:	0f 1f 00             	nopl   (%rax)
    1428:	4c 89 fa             	mov    %r15,%rdx
    142b:	4c 89 f6             	mov    %r14,%rsi
    142e:	44 89 ef             	mov    %r13d,%edi
    1431:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1435:	48 83 c3 01          	add    $0x1,%rbx
    1439:	48 39 dd             	cmp    %rbx,%rbp
    143c:	75 ea                	jne    1428 <__libc_csu_init+0x38>
    143e:	48 83 c4 08          	add    $0x8,%rsp
    1442:	5b                   	pop    %rbx
    1443:	5d                   	pop    %rbp
    1444:	41 5c                	pop    %r12
    1446:	41 5d                	pop    %r13
    1448:	41 5e                	pop    %r14
    144a:	41 5f                	pop    %r15
    144c:	c3                   	retq   
    144d:	0f 1f 00             	nopl   (%rax)

0000000000001450 <__libc_csu_fini>:
    1450:	c3                   	retq   

Disassembly of section .fini:

0000000000001454 <_fini>:
    1454:	48 83 ec 08          	sub    $0x8,%rsp
    1458:	48 83 c4 08          	add    $0x8,%rsp
    145c:	c3                   	retq   
